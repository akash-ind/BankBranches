{"version":3,"sources":["component/paginate.js","globalInfo.js","component/bank.js","component/bankdetail.js","App.js","reportWebVitals.js","index.js"],"names":["Paginate","handleClick","event","pageNo","target","getAttribute","props","changePage","tempPageNo","pages","Math","ceil","this","itemNo","pageSize","currentPage","currentPageNo","limit","lastEntered","push","data-value","onClick","i","max","className","min","Container","Row","Col","sm","Table","bordered","Component","ServerDomain","Bank","searchCity","state","favourite","favouriteBanks","setState","loading","cacheActions","hasCache","getCache","url","offset","city","params","favouriteChanged","console","log","setData","data","fetch","then","res","json","setCache","results","count","changePageSize","e","value","changePageNo","invertFavourite","el","closest","id","setAttribute","handleFavouriteClick","allBanks","prev","index","Button","variant","responsive","map","branch","branchName","toLowerCase","branchState","ifsc","address","query","queryCity","indexOf","to","data-key","renderList","xs","md","lg","Form","Control","type","onChange","withRouter","BankDetail","match","favorite","bank_id","name","City","changeCity","Group","controlId","as","custom","Search","changeQuery","placeholder","App","bind","store","actions","basename","process","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0VAqEeA,G,kNA9DXC,YAAc,SAAAC,GACV,IAAMC,EAASD,EAAME,OAAOC,aAAa,cACzC,EAAKC,MAAMC,WAAWJ,I,uDAItB,IAAIK,EAAa,GACbC,EAAQC,KAAKC,KAAKC,KAAKN,MAAMO,OAAOD,KAAKN,MAAMQ,UAC/CC,EAAcH,KAAKN,MAAMU,cACzBC,EAAQ,GACRC,EAAY,EACbH,EAAY,EAAE,IAEbP,EAAWW,KAAK,oBAAYC,aAAY,EAAGC,QAAST,KAAKX,YAAzC,SAAuD,GAA9C,IACzBgB,IACAC,EAAc,GAEfH,EAAY,EAAE,IAEbP,EAAWW,KAAK,oCAAQ,OACxBF,KAEJ,IAAI,IAAIK,EAAIZ,KAAKa,IAAI,EAAGR,EAAY,GAAGO,GAAGP,EAAYO,IAElDL,IACGK,IAAMP,GAMTP,EAAWW,KAAK,oBAAYC,aAAYE,EAAGD,QAAST,KAAKX,YAAzC,SAAuDqB,GAA9CA,IACzBJ,EAAcI,IALVd,EAAWW,KAAK,oBAAYK,UAAU,WAAWJ,aAAYE,EAAGD,QAAST,KAAKX,YAA9D,SAA4EqB,GAAnEA,IACzBJ,EAAcI,GAMtB,IAAI,IAAIA,EAAIP,EAAY,EAAEO,GAAGZ,KAAKe,IAAIhB,EAAOM,EAAYE,EAAM,GAAGK,IAE9DL,IACAT,EAAWW,KAAK,oBAAYC,aAAYE,EAAGD,QAAST,KAAKX,YAAzC,SAAuDqB,GAA9CA,IACzBJ,EAAcI,EAMlB,OAJGJ,EAAYT,EAAM,GACjBD,EAAWW,KAAK,oCAAQ,OACzBD,EAAYT,GACXD,EAAWW,KAAK,oBAAgBC,aAAYX,EAAOY,QAAST,KAAKX,YAAjD,SAA+DQ,GAAtDA,IAEzB,cAACiB,EAAA,EAAD,UACI,cAACC,EAAA,EAAD,CAAKH,UAAU,yBAAf,SACI,cAACI,EAAA,EAAD,CAAKC,GAAG,OAAR,SACA,cAACC,EAAA,EAAD,CAAOC,UAAQ,EAAf,SACI,gCACA,6BACKvB,kB,GAtDNwB,c,QCFVC,EAAe,oC,uBCUtBC,E,kDACJ,WAAY5B,GAAQ,IAAD,8BACjB,cAAMA,IAWR6B,WAAa,SAACrB,GAEZ,GAAG,EAAKsB,MAAMC,UAEZ,OAAO,EAAKC,iBAEd,EAAKC,SAAS,CACZC,SAAQ,IAPa,MASQ,EAAKlC,MAAMmC,aAAlCC,EATe,EASfA,SAAUC,EATK,EASLA,SACdC,EAAG,UAAMX,EAAN,oCAA8CnB,EAA9C,mBAAiE,EAAKsB,MAAMS,OAA5E,cAAwF,EAAKvC,MAAMwC,MACpGC,EAAS,CACbjC,SAAS,EAAKsB,MAAMtB,SACpB+B,OAAO,EAAKT,MAAMS,OAClBC,KAAK,EAAKxC,MAAMwC,MAEfJ,EAASE,EAAKG,KAAa,EAAKX,MAAMY,kBAEvCC,QAAQC,IAAI,eACZ,EAAKC,QAAQR,EAASC,EAAKG,GAAQK,OAGnCC,MACET,GAEDU,MAAK,SAAAC,GAEJ,OADAN,QAAQC,IAAIK,GACLA,EAAIC,UACZF,MAAK,SAAAF,GACJH,QAAQC,IAAIE,GACZ,EAAKD,QAAQC,GACb,EAAK9C,MAAMmC,aAAagB,SAASb,EAAKG,EAAQK,OA3CjC,EAgDnBD,QAAU,SAAAC,GACR,EAAKb,SAAS,CACZa,KAAKA,EAAKM,QACVlB,SAAQ,EACRmB,MAAMP,EAAKO,SApDI,EAwDnBC,eAAiB,SAAAC,GACM,GAAlBA,EAAEzD,OAAO0D,QAEV,EAAKvB,SAAS,CACZzB,SAAU+C,EAAEzD,OAAO0D,QAErB,EAAK3B,WAAW0B,EAAEzD,OAAO0D,SA9DV,EAkEnBC,aAAe,SAAA5D,GACb,EAAKoC,SAAS,CACZM,OAAQ1C,EAAO,IACd,kBAAI,EAAKgC,WAAW,EAAKC,MAAMtB,cArEjB,EAwEnBkD,gBAAkB,SAAAH,GAChB,IAAII,EAAKJ,EAAEzD,OAAO8D,QAAQ,cACtBC,EAAKF,EAAG5D,aAAa,YACzBgD,MAAM,GAAD,OAAIpB,EAAJ,qCAA6CkC,IACjDb,MAAK,SAAAC,GAAG,OAAEA,EAAIC,UACdF,MAAK,SAAAF,GAAI,OAAEH,QAAQC,IAAIE,MACM,cAA3Ba,EAAG5D,aAAa,SAEjB4D,EAAGG,aAAa,QAAS,IAGzBH,EAAGG,aAAa,QAAS,aAE3B,EAAK7B,SAAS,CAACS,kBAAiB,KArFf,EAwFnBV,eAAiB,SAAAuB,GACf,EAAKtB,SAAS,CACXC,SAAQ,IACXa,MAAM,GAAD,OAAIpB,EAAJ,qCAA6C,EAAKG,MAAMtB,SAAxD,mBAA2E,EAAKsB,MAAMS,SAC1FS,MAAK,SAAAC,GAAG,OAAEA,EAAIC,UACdF,MAAK,SAAAF,GACJ,EAAKb,SAAS,CACZa,KAAKA,EAAKM,QACVC,MAAOP,EAAKO,MACZtB,WAAW,EACXG,SAAQ,QAlGK,EAuGnB6B,qBAAsB,SAAAR,GACpB,EAAKtB,SAAS,CACZM,OAAO,IACN,kBAAI,EAAKP,qBA1GK,EA4GnBgC,SAAW,SAAAT,GACT,EAAKtB,SAAS,CACZF,WAAU,EACVQ,OAAO,IACN,kBAAI,EAAKV,WAAW,EAAKC,MAAMtB,cA9GlC,EAAKsB,MAAQ,CACXtB,SAAU,GACV+B,OAAO,EACPO,KAAM,GACNO,MAAM,EACNnB,SAAQ,EACRH,WAAU,EACVW,kBAAiB,GATF,E,+DAmHAuB,GAEbA,EAAKzB,OAAOlC,KAAKN,MAAMwC,MAASlC,KAAKwB,MAAMC,WAC7CzB,KAAKuB,WAAWvB,KAAKwB,MAAMtB,Y,0CAG7BF,KAAKuB,WAAWvB,KAAKwB,MAAMtB,Y,+BAInB,IAAD,OACH0D,EAAQ5D,KAAKwB,MAAMS,OAAOjC,KAAKwB,MAAMtB,SAAS,EA2B3CuB,EAAazB,KAAKwB,MAAlBC,UACP,OACE,eAACX,EAAA,EAAD,WACE,eAACC,EAAA,EAAD,CAAKH,UAAU,OAAf,UACE,cAACiD,EAAA,EAAD,CAAQC,QAAUrC,EAAU,kBAAkB,UAAWhB,QAAST,KAAK0D,SAAvE,uBACA,cAACG,EAAA,EAAD,CAAQC,QAAWrC,EAAU,UAAU,kBAAmBhB,QAAST,KAAKyD,qBAAxE,gCAGF,eAACvC,EAAA,EAAD,CAAO6C,YAAU,EAAjB,UACE,gCACE,+BACE,sCACA,wCACA,sCACA,uCACA,sCACA,gDAGJ,gCACC/D,KAAKwB,MAAMI,QACV,qBAAKhB,UAAU,aAAf,wBACCZ,KAAKwB,MAAMgB,KAAKwB,KAAI,SAAAC,GAAM,OAhDhB,SAAAA,GACjB,IAAIC,EAAaD,EAAOA,OAAOE,cAC3BjC,EAAO+B,EAAO/B,KAAKiC,cACnBC,EAAcH,EAAOzC,MAAM2C,cAC3BE,EAAOJ,EAAOI,KAAKF,cACnBG,EAAUL,EAAOK,QAAQH,cACzBI,EAAQ,EAAK7E,MAAM6E,MAAMJ,cACzBK,EAAY,EAAK9E,MAAMwC,KAAKiC,cAChC,OAA+B,IAA3BjC,EAAKuC,QAAQD,KAAkD,IAA/BN,EAAWO,QAAQF,KAC5B,IAAzBrC,EAAKuC,QAAQF,KAAiD,IAAhCH,EAAYK,QAAQF,KACtB,IAAzBF,EAAKI,QAAQF,KAA6C,IAA5BD,EAAQG,QAAQF,GAC1C,KAIP,+BACE,6BAAKX,MACL,6BAAI,cAAC,IAAD,CAAMc,GAAI,QAAQT,EAAOV,GAAzB,SAA8BU,EAAOA,WACzC,6BAAKA,EAAO/B,OACZ,6BAAK+B,EAAOzC,QACZ,6BAAKyC,EAAOI,OACZ,6BAAKJ,EAAOxC,UAAU,cAAC,IAAD,CAAYb,UAAU,kBAAkB+D,WAAUV,EAAOV,GAAI9C,QAAS,EAAK2C,kBACjG,cAAC,IAAD,CAAYuB,WAAUV,EAAOV,GAAI3C,UAAU,QAAQH,QAAS,EAAK2C,sBAP1Da,EAAOV,IAiCiBqB,CAAWX,WAI5C,cAAClD,EAAA,EAAD,CAAKH,UAAU,OAAf,SACE,cAACI,EAAA,EAAD,CAAK6D,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAvB,SACA,cAACC,EAAA,EAAKC,QAAN,CACEC,KAAK,SACLC,SAAUnF,KAAKgD,eACfE,MAAOlD,KAAKwB,MAAMtB,eAKtB,cAAC,EAAD,CACAP,WAAYK,KAAKmD,aACjBlD,OAAQD,KAAKwB,MAAMuB,MACnB7C,SAAUF,KAAKwB,MAAMtB,SACrBE,cAAeJ,KAAKwB,MAAMS,OAAO,W,GAlMtBb,aAyMJgE,cAAW9D,G,iBC9MpB+D,E,kDACF,WAAY3F,GACX,IAAD,8BACI,cAAMA,IACD8B,MAAM,CACPI,SAAQ,EACRY,KAAK,MAJb,E,gEAQC,IAAD,OACIxC,KAAK2B,SAAS,CACVC,SAAQ,IAEZ,IAAMI,EAAG,UAAMX,EAAN,qBAA+BrB,KAAKN,MAAM4F,MAAMnD,OAAOoB,IAChEd,MAAMT,GACLU,MAAK,SAAAC,GAAG,OAAEA,EAAIC,UACdF,MAAK,SAAAF,GAAI,OAAE,EAAKb,SAAS,CACtBa,KAAKA,EACLZ,SAAQ,S,+BAKZ,IAAMY,EAAOxC,KAAKwB,MAAMgB,KACxB,OAAGxC,KAAKwB,MAAMI,UAAYY,EAGlB,cAAC1B,EAAA,EAAD,yBAOJ,gCACI,cAACC,EAAA,EAAD,CAAKH,UAAU,sBAAf,SACI,cAACI,EAAA,EAAD,CAAKC,GAAG,OAAR,SACKuB,EAAK+C,SACN,cAAC,IAAD,CAAY3E,UAAU,oBACtB,cAAC,IAAD,CAAYA,UAAU,cAG9B,6BAAK4B,EAAKgD,QAAQC,OAClB,eAACvE,EAAA,EAAD,CAAO6C,YAAU,EAAjB,UACI,gCACI,+BACA,wCACA,sCACA,uCACA,2CAGJ,gCACI,+BACI,6BAAKvB,EAAKyB,SACV,wCAAWzB,EAAKN,QAChB,yCAAYM,EAAKhB,SACjB,wCAAWgB,EAAK6B,uB,GA1DnBjD,aAmEVgE,cAAWC,GC7DpBK,E,4MAGJC,WAAa,SAAA1C,GACX,EAAKvD,MAAMiG,WAAW1C,EAAEzD,OAAO0D,Q,uDAI/B,OACE,cAAC8B,EAAA,EAAKY,MAAN,CAAYC,UAAU,2BAAtB,SACE,eAACb,EAAA,EAAKC,QAAN,CAAca,GAAG,SAAS5C,MAASlD,KAAKN,MAAMwC,KAAMiD,SAAUnF,KAAK2F,WAAYI,QAAM,EAArF,UACE,wBAAQ7C,MAAM,GAAd,yBACA,wBAAQA,MAAM,QAAd,mBACA,wBAAQA,MAAM,YAAd,uBACA,wBAAQA,MAAM,SAAd,oBACA,wBAAQA,MAAM,UAAd,qBACA,wBAAQA,MAAM,UAAd,8B,GAhBS9B,aAwBb4E,E,4MAEJC,YAAc,SAAAhD,GACZ,EAAKvD,MAAMuG,YAAYhD,EAAEzD,OAAO0D,Q,uDAIhC,OACE,cAAC8B,EAAA,EAAKC,QAAN,CAAcC,KAAK,OAAOgB,YAAY,SAASf,SAAUnF,KAAKiG,YAAa/C,MAAOlD,KAAKN,MAAMwC,W,GAR9Ed,aA8EN+E,E,kDA7Db,aACC,IAAD,8BACE,gBACK3E,MAAM,CACTU,KAAK,GACLqC,MAAM,IAER,EAAKoB,WAAa,EAAKA,WAAWS,KAAhB,gBAClB,EAAKH,YAAc,EAAKA,YAAYG,KAAjB,gBAPrB,E,uDAUWlD,GAETlD,KAAK2B,SAAS,CACZO,KAAKgB,M,kCAGGA,GAEVlD,KAAK2B,SAAS,CACZ4C,MAAMrB,M,+BAIT,IAAD,OACI,OACE,cAAC,IAAD,UACG,cAAEmD,MAAF,IAASC,EAAT,EAASA,QAAT,OACC,cAAC,IAAD,CAAQC,SAAUC,gBAAlB,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAlB,SACA,eAAC5F,EAAA,EAAD,WACE,2CACA,eAACC,EAAA,EAAD,CAAKH,UAAU,0BAAf,UACE,cAACI,EAAA,EAAD,CAAK6D,GAAI,GAAIE,GAAI,EAAGnE,UAAU,OAA9B,SACE,cAAC,EAAD,CAAMsB,KAAM,EAAKV,MAAMU,KAAMyD,WAAY,EAAKA,eAEhD,cAAC3E,EAAA,EAAD,CAAK6D,GAAI,GAAIE,GAAI,EAAGnE,UAAY,OAAhC,SACE,cAAC,EAAD,CAAQqF,YAAa,EAAKA,YAAa1B,MAAO,EAAK/C,MAAM+C,aAG7D,cAACxD,EAAA,EAAD,CAAKH,WAAS,EAAd,SACE,cAAC,EAAD,CAAMsB,KAAM,EAAKV,MAAMU,KAAMqC,MAAO,EAAK/C,MAAM+C,MAAO1C,aAAcyE,WAIxE,cAAC,IAAD,CAAOG,OAAK,EAACC,KAAK,YAAlB,SACE,cAAC5F,EAAA,EAAD,UACE,cAAC,EAAD,oB,GAjDFM,aCzCHuF,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBnE,MAAK,YAAkD,IAA/CoE,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.edf4b33b.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport {Container,Row, Col, Table} from 'react-bootstrap';\nimport \"../css/paginate.css\"\n\nclass Paginate extends Component{\n  \n    \n    handleClick = event=>{\n        const pageNo = event.target.getAttribute('data-value') \n        this.props.changePage(pageNo)\n    }\n    render()\n    {\n        let tempPageNo = [];\n        let pages = Math.ceil(this.props.itemNo/this.props.pageSize)\n        let currentPage = this.props.currentPageNo;\n        let limit = 11;\n        let lastEntered=1;\n        if(currentPage-3>1)\n        {\n            tempPageNo.push(<td key={1} data-value={1} onClick={this.handleClick}>{1}</td>)\n            limit--;\n            lastEntered = 1;\n        }\n        if(currentPage-3>2)\n        {\n            tempPageNo.push(<td key=\"n1\">...</td>)\n            limit--;\n        }\n        for(let i = Math.max(1, currentPage-3);i<=currentPage;i++)\n        {\n            limit--;\n            if(i === currentPage)\n            {\n                tempPageNo.push(<td key={i} className=\"selected\" data-value={i} onClick={this.handleClick}>{i}</td>);\n                lastEntered = i;\n                continue;\n            }\n            tempPageNo.push(<td key={i} data-value={i} onClick={this.handleClick}>{i}</td>);\n            lastEntered = i;\n        }\n        for(let i = currentPage+1;i<=Math.min(pages, currentPage+limit-2);i++)\n        {\n            limit--;\n            tempPageNo.push(<td key={i} data-value={i} onClick={this.handleClick}>{i}</td>);\n            lastEntered = i;\n        }\n        if(lastEntered<pages-1)\n            tempPageNo.push(<td key=\"n2\">...</td>)\n        if(lastEntered<pages)\n            tempPageNo.push(<td key={pages} data-value={pages} onClick={this.handleClick}>{pages}</td>)\n        return(\n            <Container>\n                <Row className=\"justify-content-center\">\n                    <Col sm=\"auto\">\n                    <Table bordered>\n                        <tbody>\n                        <tr>\n                            {tempPageNo}\n                        </tr>\n                        </tbody>\n                    </Table>\n                    </Col>\n                </Row>\n            </Container>\n        )\n    }\n}\n\nexport default Paginate;","\n\nexport const ServerDomain = \"https://fyle-branch.herokuapp.com\"","import React, { Component } from 'react';\nimport { Container,Row, Col,  Form, Table, Button } from 'react-bootstrap';\nimport Paginate from './paginate';\nimport {MdFavorite} from 'react-icons/md';\nimport {ServerDomain} from '../globalInfo';\nimport \"../css/bank.css\";\nimport {\n  withRouter,\n  Link\n} from 'react-router-dom';\n\n\nclass Bank extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      pageSize: 10,\n      offset:0,\n      data: [],\n      count:0,\n      loading:false,\n      favourite:false,\n      favouriteChanged:false\n    }\n  }\n  searchCity = (pageSize)=>{\n    // Returns the result fo the city\n    if(this.state.favourite)\n    {\n      return this.favouriteBanks()\n    }\n    this.setState({\n      loading:true\n    })\n    const { hasCache, getCache } = this.props.cacheActions\n    let url = `${ServerDomain}/api/branches/city?limit=${pageSize}&offset=${this.state.offset}&q=${this.props.city}`\n    const params = {\n      pageSize:this.state.pageSize,\n      offset:this.state.offset,\n      city:this.props.city,\n    }\n    if(hasCache(url, params) && !(this.state.favouriteChanged))\n    {\n      console.log(\"Cached data\");\n      this.setData(getCache(url, params).data)\n    }\n    else{\n      fetch(\n        url\n      )\n      .then(res=>{\n        console.log(res);\n        return res.json()})\n      .then(data=>{\n        console.log(data)\n        this.setData(data);\n        this.props.cacheActions.setCache(url, params, data);\n      })\n    }\n  }\n\n  setData = data=>{\n    this.setState({\n      data:data.results,\n      loading:false,\n      count:data.count\n    })\n  }\n\n  changePageSize = e => {\n    if(e.target.value != 0)\n    {\n      this.setState({\n        pageSize: e.target.value\n      })\n      this.searchCity(e.target.value)\n    }\n  }\n\n  changePageNo = pageNo => {\n    this.setState({\n      offset: pageNo-1\n    }, ()=>this.searchCity(this.state.pageSize))\n  }\n\n  invertFavourite = e=>{\n    let el = e.target.closest(\"[data-key]\")\n    let id = el.getAttribute('data-key');\n    fetch(`${ServerDomain}/api/invert-favourite/?id=${id}`)\n    .then(res=>res.json())\n    .then(data=>console.log(data))\n    if(el.getAttribute('class')==='favourite')\n    {\n      el.setAttribute('class', \"\");\n    }\n    else{\n      el.setAttribute(\"class\", \"favourite\");\n    }\n    this.setState({favouriteChanged:true})\n  }\n\n  favouriteBanks = e=>{\n    this.setState({\n       loading:true})\n    fetch(`${ServerDomain}/api/get-favourite/?limit=${this.state.pageSize}&offset=${this.state.offset}`)\n    .then(res=>res.json())\n    .then(data=>{\n      this.setState({\n        data:data.results,\n        count: data.count,\n        favourite: true, \n        loading:false,\n      })\n    })\n  }\n\n  handleFavouriteClick= e=>{\n    this.setState({\n      offset:0\n    }, ()=>this.favouriteBanks())\n  }\n  allBanks = e=>{\n    this.setState({\n      favourite:false,\n      offset:0\n    }, ()=>this.searchCity(this.state.pageSize))\n  }\n\n  componentDidUpdate(prev)\n  {\n    if (prev.city!==this.props.city && !this.state.favourite)\n      this.searchCity(this.state.pageSize)  \n  }\n  componentDidMount() {\n    this.searchCity(this.state.pageSize);\n  }\n  \n  \n  render() {\n    let index = this.state.offset*this.state.pageSize+1;\n    const renderList = branch=>{\n      let branchName = branch.branch.toLowerCase();\n      let city = branch.city.toLowerCase();\n      let branchState = branch.state.toLowerCase();\n      let ifsc = branch.ifsc.toLowerCase();\n      let address = branch.address.toLowerCase();\n      let query = this.props.query.toLowerCase();\n      let queryCity = this.props.city.toLowerCase();\n      if (city.indexOf(queryCity)===-1 ||(branchName.indexOf(query) === -1 &&\n        city.indexOf(query) === -1 && branchState.indexOf(query) === -1\n        && ifsc.indexOf(query) === -1 && address.indexOf(query) === -1)) {\n        return null;\n      }\n      else{\n        return (\n        <tr key={branch.id}>\n          <td>{index++}</td>\n          <td><Link to={\"bank/\"+branch.id}>{branch.branch}</Link></td>\n          <td>{branch.city}</td>\n          <td>{branch.state}</td>\n          <td>{branch.ifsc}</td>\n          <td>{branch.favourite?<MdFavorite className=\"favourite scale\" data-key={branch.id} onClick={this.invertFavourite}/>:\n          <MdFavorite data-key={branch.id} className=\"scale\" onClick={this.invertFavourite}/>}</td>\n        </tr>)\n      }\n    }\n    const {favourite} = this.state\n    return (\n      <Container>\n        <Row className=\"mb-4\">\n          <Button variant= {favourite?\"primary-outline\":\"primary\"} onClick={this.allBanks}>All Banks</Button>\n          <Button variant = {favourite?\"primary\":\"primary-outline\"} onClick={this.handleFavouriteClick}>Favourite Banks</Button>\n        </Row>\n        \n        <Table responsive>\n          <thead>\n            <tr>\n              <th>Sno.</th>\n              <th>Branch</th>\n              <th>City</th>\n              <th>State</th>\n              <th>IFSC</th>\n              <th>Favourite</th>\n            </tr>\n          </thead>\n          <tbody>\n          {this.state.loading?\n            <div className=\"set-height\">Loading...</div>\n            :this.state.data.map(branch=>renderList(branch))}\n          </tbody>\n      \n        </Table>\n        <Row className=\"mb-3\">\n          <Col xs={3} md={2} lg={1}>\n          <Form.Control \n            type='number' \n            onChange={this.changePageSize} \n            value={this.state.pageSize}>\n          </Form.Control>\n          </Col>\n        </Row>\n        \n        <Paginate \n        changePage={this.changePageNo} \n        itemNo={this.state.count} \n        pageSize={this.state.pageSize} \n        currentPageNo={this.state.offset+1} />\n      </Container>\n    )\n  }\n}\n\n\nexport default withRouter(Bank);","import React, { Component } from 'react';\nimport {Container, Row, Col, Table} from 'react-bootstrap';\nimport {ServerDomain} from '../globalInfo'\nimport {MdFavorite} from 'react-icons/md';\nimport \"../css/bank.css\";\nimport {withRouter} from 'react-router-dom';\n\nclass BankDetail extends Component{\n    constructor(props)\n    {\n        super(props)\n        this.state={\n            loading:false,\n            data:null\n        }\n    }\n    componentDidMount()\n    {\n        this.setState({\n            loading:true\n        })\n        const url = `${ServerDomain}/api/bank/${this.props.match.params.id}`\n        fetch(url)\n        .then(res=>res.json())\n        .then(data=>this.setState({\n            data:data,\n            loading:false\n        }))\n    }\n    render()\n    {\n        const data = this.state.data;\n        if(this.state.loading || !data)\n        {\n            return(\n                <Container>\n                    Loading...\n                </Container>\n            )\n        }\n        return(\n\n            <div>\n                <Row className=\"justify-content-end\">\n                    <Col sm=\"auto\">\n                        {data.favorite?\n                        <MdFavorite className=\"favourite scale\" ></MdFavorite>:\n                        <MdFavorite className=\"scale\"></MdFavorite>}\n                    </Col>\n                </Row>\n                <h3>{data.bank_id.name}</h3>\n                <Table responsive>\n                    <thead>\n                        <tr>\n                        <th>Branch</th>\n                        <th>City</th>\n                        <th>State</th>\n                        <th>IFSC</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr>\n                            <td>{data.branch}</td>\n                            <td>City: {data.city}</td>\n                            <td>State: {data.state}</td>\n                            <td>IFSC: {data.ifsc}</td>\n                        </tr>\n                    </tbody>\n                </Table>\n            </div>\n        )\n    }\n}\n\nexport default withRouter(BankDetail);","import './css/App.css';\nimport React, { Component } from 'react';\nimport {Container, Row, Col, Form} from 'react-bootstrap';\nimport Bank from './component/bank';\nimport Cache from 'react-api-cache';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\nimport BankDetail from './component/bankdetail';\n\n\nclass City extends Component{\n\n\n  changeCity = e=>{\n    this.props.changeCity(e.target.value)\n  }\n  render()\n  {\n    return (\n      <Form.Group controlId=\"exampleForm.SelectCustom\">\n        <Form.Control as=\"select\" value = {this.props.city} onChange={this.changeCity} custom>\n          <option value=\"\">Select City</option>\n          <option value=\"delhi\">Delhi</option>\n          <option value=\"bangalore\">Bangalore</option>\n          <option value=\"mumbai\">Mumbai</option>\n          <option value=\"chennai\">Chennai</option>\n          <option value=\"kolkata\">Kolkata</option>\n        </Form.Control>\n      </Form.Group>\n    )\n  }\n}\n\n\nclass Search extends Component{\n  \n  changeQuery = e=>{\n    this.props.changeQuery(e.target.value)\n  }\n  render()\n  {\n    return(\n      <Form.Control type='text' placeholder=\"Search\" onChange={this.changeQuery} value={this.props.city}>\n      </Form.Control>\n    )\n  }\n}\n\n\n\nclass App extends Component{\n  constructor()\n  {\n    super();\n    this.state={\n      city:\"\",\n      query:\"\",\n    }\n    this.changeCity = this.changeCity.bind(this);\n    this.changeQuery = this.changeQuery.bind(this);\n  }\n\n  changeCity(value)\n  {\n    this.setState({\n      city:value\n    })\n  }\n  changeQuery(value)\n  {\n    this.setState({\n      query:value\n    })\n  }\n  render()\n  {\n      return(\n        <Cache>\n          {({store, actions})=>(\n            <Router basename={process.env.PUBLIC_URL}>\n              <Switch>\n                <Route exact path=\"/\">\n                <Container>\n                  <h3>Bank List</h3>\n                  <Row className=\"justify-content-between\">\n                    <Col xs={12} lg={4} className=\"mb-2\">\n                      <City city={this.state.city} changeCity={this.changeCity} />\n                    </Col>\n                    <Col xs={12} lg={4} className = \"mb-2\">\n                      <Search changeQuery={this.changeQuery} query={this.state.query}/>\n                    </Col>\n                  </Row>\n                  <Row className>\n                    <Bank city={this.state.city} query={this.state.query} cacheActions={actions}/>\n                  </Row>\n                </Container>\n                </Route>\n                <Route exact path=\"/bank/:id\">\n                  <Container>\n                    <BankDetail />\n                  </Container>\n                </Route>\n              </Switch>\n            </Router>\n            \n          )}\n        </Cache>\n      )\n  }\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}