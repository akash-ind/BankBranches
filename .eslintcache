[{"/home/akash/projects/Fyle/Client/fyleproject/src/index.js":"1","/home/akash/projects/Fyle/Client/fyleproject/src/App.js":"2","/home/akash/projects/Fyle/Client/fyleproject/src/reportWebVitals.js":"3","/home/akash/projects/Fyle/Client/fyleproject/src/bank.js":"4","/home/akash/projects/Fyle/Client/fyleproject/src/banksearch.js":"5","/home/akash/projects/Fyle/Client/fyleproject/src/component/paginate.js":"6","/home/akash/projects/Fyle/Client/fyleproject/src/globalInfo.js":"7","/home/akash/projects/Fyle/Client/fyleproject/src/component/bankdetail.js":"8"},{"size":500,"mtime":1611059162615,"results":"9","hashOfConfig":"10"},{"size":2859,"mtime":1611221314587,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":1611059162615,"results":"12","hashOfConfig":"10"},{"size":5694,"mtime":1611223338133,"results":"13","hashOfConfig":"10"},{"size":942,"mtime":1611153532203,"results":"14","hashOfConfig":"10"},{"size":2309,"mtime":1611212934684,"results":"15","hashOfConfig":"10"},{"size":53,"mtime":1611204853479,"results":"16","hashOfConfig":"10"},{"size":2186,"mtime":1611223257675,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"rm5jma",{"filePath":"21","messages":"22","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"20"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"20"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"35"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"20"},"/home/akash/projects/Fyle/Client/fyleproject/src/index.js",[],["41","42"],"/home/akash/projects/Fyle/Client/fyleproject/src/App.js",["43","44","45","46"],"import './App.css';\nimport React, { Component } from 'react';\nimport {Container, Row, Col, Form, Table} from 'react-bootstrap';\nimport Bank from './bank';\nimport Cache from 'react-api-cache';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\nimport BankDetail from './component/bankdetail';\n\n\nclass City extends Component{\n  constructor(props)\n  {\n    super(props);\n  }\n\n  changeCity = e=>{\n    this.props.changeCity(e.target.value)\n  }\n  render()\n  {\n    return (\n      <Form.Group controlId=\"exampleForm.SelectCustom\">\n        <Form.Control as=\"select\" value = {this.props.city} onChange={this.changeCity} custom>\n          <option value=\"\">Select City</option>\n          <option value=\"delhi\">Delhi</option>\n          <option value=\"bangalore\">Bangalore</option>\n          <option value=\"mumbai\">Mumbai</option>\n          <option value=\"chennai\">Chennai</option>\n          <option value=\"kolkata\">Kolkata</option>\n        </Form.Control>\n      </Form.Group>\n    )\n  }\n}\n\n\nclass Search extends Component{\n  constructor(props)\n  {\n    super(props);\n  }\n  changeQuery = e=>{\n    this.props.changeQuery(e.target.value)\n  }\n  render()\n  {\n    return(\n      <Form.Control type='text' placeholder=\"Search\" onChange={this.changeQuery} value={this.props.city}>\n      </Form.Control>\n    )\n  }\n}\n\n\n\nclass App extends Component{\n  constructor()\n  {\n    super();\n    this.state={\n      city:\"\",\n      query:\"\",\n    }\n    this.changeCity = this.changeCity.bind(this);\n    this.changeQuery = this.changeQuery.bind(this);\n  }\n\n  changeCity(value)\n  {\n    this.setState({\n      city:value\n    })\n  }\n  changeQuery(value)\n  {\n    this.setState({\n      query:value\n    })\n  }\n  render()\n  {\n      return(\n        <Cache>\n          {({store, actions})=>(\n            <Router>\n              <Switch>\n                <Route exact path=\"/\">\n                <Container>\n                  <h3>Bank List</h3>\n                  <Row className=\"justify-content-between\">\n                    <Col xs={12} lg={4} className=\"mb-2\">\n                      <City city={this.state.city} changeCity={this.changeCity} />\n                    </Col>\n                    <Col xs={12} lg={4} className = \"mb-2\">\n                      <Search changeQuery={this.changeQuery} query={this.state.query}/>\n                    </Col>\n                  </Row>\n                  <Row className>\n                    <Bank city={this.state.city} query={this.state.query} cacheActions={actions}/>\n                  </Row>\n                </Container>\n                </Route>\n                <Route exact path=\"/bank/:id\">\n                  <Container>\n                    <BankDetail />\n                  </Container>\n                </Route>\n              </Switch>\n            </Router>\n            \n          )}\n        </Cache>\n      )\n  }\n}\n\n\nexport default App;\n","/home/akash/projects/Fyle/Client/fyleproject/src/reportWebVitals.js",[],"/home/akash/projects/Fyle/Client/fyleproject/src/bank.js",["47"],"import React, { Component } from 'react';\nimport { Container,Row, Col,  Form, Table, Button } from 'react-bootstrap';\nimport Paginate from './component/paginate';\nimport {MdFavorite} from 'react-icons/md';\nimport {ServerDomain} from './globalInfo';\nimport \"./bank.css\";\nimport {\n  BrowserRouter as Router,\n  Link\n} from 'react-router-dom';\n\n\nclass Bank extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      pageSize: 10,\n      offset:0,\n      data: [],\n      count:0,\n      loading:false,\n      favourite:false,\n      favouriteChanged:false\n    }\n  }\n  searchCity = (pageSize)=>{\n    // Returns the result fo the city\n    if(this.state.favourite)\n    {\n      return this.favouriteBanks()\n    }\n    this.setState({\n      loading:true\n    })\n    const { hasCache, getCache } = this.props.cacheActions\n    let url = `${ServerDomain}/api/branches/city?limit=${pageSize}&offset=${this.state.offset}&q=${this.props.city}`\n    const params = {\n      pageSize:this.state.pageSize,\n      offset:this.state.offset,\n      city:this.props.city,\n    }\n    if(hasCache(url, params) && !(this.state.favouriteChanged))\n    {\n      console.log(\"Cached data\");\n      this.setData(getCache(url, params).data)\n    }\n    else{\n      fetch(\n        url\n      )\n      .then(res=>res.json())\n      .then(data=>{\n        this.setData(data);\n        this.props.cacheActions.setCache(url, params, data);\n      })\n    }\n  }\n\n  setData = data=>{\n    this.setState({\n      data:data.results,\n      loading:false,\n      count:data.count\n    })\n  }\n\n  changePageSize = e => {\n    if(e.target.value != 0)\n    {\n      this.setState({\n        pageSize: e.target.value\n      })\n      this.searchCity(e.target.value)\n    }\n  }\n\n  changePageNo = pageNo => {\n    this.setState({\n      offset: pageNo-1\n    }, ()=>this.searchCity(this.state.pageSize))\n  }\n\n  invertFavourite = e=>{\n    let el = e.target.closest(\"[data-key]\")\n    let id = el.getAttribute('data-key');\n    fetch(`${ServerDomain}/api/invert-favourite/?id=${id}`)\n    .then(res=>res.json())\n    .then(data=>console.log(data))\n    if(el.getAttribute('class')==='favourite')\n    {\n      el.setAttribute('class', \"\");\n    }\n    else{\n      el.setAttribute(\"class\", \"favourite\");\n    }\n    this.setState({favouriteChanged:true})\n  }\n\n  favouriteBanks = e=>{\n    this.setState({\n       loading:true})\n    fetch(`${ServerDomain}/api/get-favourite/?limit=${this.state.pageSize}&offset=${this.state.offset}`)\n    .then(res=>res.json())\n    .then(data=>{\n      this.setState({\n        data:data.results,\n        count: data.count,\n        favourite: true, \n        loading:false,\n      })\n    })\n  }\n\n  handleFavouriteClick= e=>{\n    this.setState({\n      offset:0\n    }, ()=>this.favouriteBanks())\n  }\n  allBanks = e=>{\n    this.setState({\n      favourite:false,\n      offset:0\n    }, ()=>this.searchCity(this.state.pageSize))\n  }\n\n  componentDidUpdate(prev)\n  {\n    if (prev.city!==this.props.city && !this.state.favourite)\n      this.searchCity(this.state.pageSize)  \n  }\n  componentDidMount() {\n    this.searchCity(this.state.pageSize);\n  }\n  \n  \n  render() {\n    let index = this.state.offset*this.state.pageSize+1;\n    const renderList = branch=>{\n      let branchName = branch.branch.toLowerCase();\n      let city = branch.city.toLowerCase();\n      let branchState = branch.state.toLowerCase();\n      let ifsc = branch.ifsc.toLowerCase();\n      let address = branch.address.toLowerCase();\n      let query = this.props.query.toLowerCase();\n      let queryCity = this.props.city.toLowerCase();\n      if (city.indexOf(queryCity)===-1 ||(branchName.indexOf(query) === -1 &&\n        city.indexOf(query) === -1 && branchState.indexOf(query) === -1\n        && ifsc.indexOf(query) === -1 && address.indexOf(query) === -1)) {\n        return null;\n      }\n      else{\n        return (\n        <tr key={branch.id}>\n          <td>{index++}</td>\n          <td><Link to={\"bank/\"+branch.id}>{branch.branch}</Link></td>\n          <td>{branch.city}</td>\n          <td>{branch.state}</td>\n          <td>{branch.ifsc}</td>\n          <td>{branch.favourite?<MdFavorite className=\"favourite scale\" data-key={branch.id} onClick={this.invertFavourite}/>:\n          <MdFavorite data-key={branch.id} className=\"scale\" onClick={this.invertFavourite}/>}</td>\n        </tr>)\n      }\n    }\n    const {favourite} = this.state\n    return (\n      <Router>\n      <Container>\n        <Row className=\"mb-4\">\n          <Button variant= {favourite?\"primary-outline\":\"primary\"} onClick={this.allBanks}>All Banks</Button>\n          <Button variant = {favourite?\"primary\":\"primary-outline\"} onClick={this.handleFavouriteClick}>Favourite Banks</Button>\n        </Row>\n        \n        <Table responsive>\n          <thead>\n            <tr>\n              <th>Sno.</th>\n              <th>Branch</th>\n              <th>City</th>\n              <th>State</th>\n              <th>IFSC</th>\n              <th>Favourite</th>\n            </tr>\n          </thead>\n          <tbody>\n            {this.state.loading?(\n            <div className=\"set-height\">Loading...</div>):\n            this.state.data.map(branch=>renderList(branch))}\n          </tbody>\n        </Table>\n        <Row className=\"mb-3\">\n          <Col xs={3} md={2} lg={1}>\n          <Form.Control \n            type='number' \n            onChange={this.changePageSize} \n            value={this.state.pageSize}>\n          </Form.Control>\n          </Col>\n        </Row>\n        \n        <Paginate \n        changePage={this.changePageNo} \n        itemNo={this.state.count} \n        pageSize={this.state.pageSize} \n        currentPageNo={this.state.offset+1} />\n      </Container>\n      </Router>\n    )\n  }\n}\n\n\nexport default Bank;","/home/akash/projects/Fyle/Client/fyleproject/src/banksearch.js",[],["48","49"],"/home/akash/projects/Fyle/Client/fyleproject/src/component/paginate.js",["50","51"],"import React, { Component } from 'react';\nimport {Container,Row, Col, Form, Table} from 'react-bootstrap';\nimport \"../paginate.css\"\n\nclass Paginate extends Component{\n    constructor(props)\n    {\n        super(props);\n    }\n    \n    \n    handleClick = event=>{\n        const pageNo = event.target.getAttribute('data-value') \n        this.props.changePage(pageNo)\n    }\n    render()\n    {\n        let tempPageNo = [];\n        let pages = Math.ceil(this.props.itemNo/this.props.pageSize)\n        let currentPage = this.props.currentPageNo;\n        let limit = 11;\n        let lastEntered=1;\n        if(currentPage-3>1)\n        {\n            tempPageNo.push(<td key={1} data-value={1} onClick={this.handleClick}>{1}</td>)\n            limit--;\n            lastEntered = 1;\n        }\n        if(currentPage-3>2)\n        {\n            tempPageNo.push(<td key=\"n1\">...</td>)\n            limit--;\n        }\n        for(let i = Math.max(1, currentPage-3);i<=currentPage;i++)\n        {\n            limit--;\n            if(i === currentPage)\n            {\n                tempPageNo.push(<td key={i} className=\"selected\" data-value={i} onClick={this.handleClick}>{i}</td>);\n                lastEntered = i;\n                continue;\n            }\n            tempPageNo.push(<td key={i} data-value={i} onClick={this.handleClick}>{i}</td>);\n            lastEntered = i;\n        }\n        for(let i = currentPage+1;i<=Math.min(pages, currentPage+limit-2);i++)\n        {\n            limit--;\n            tempPageNo.push(<td key={i} data-value={i} onClick={this.handleClick}>{i}</td>);\n            lastEntered = i;\n        }\n        if(lastEntered<pages-1)\n            tempPageNo.push(<td key=\"n2\">...</td>)\n        if(lastEntered<pages)\n            tempPageNo.push(<td key={pages} data-value={pages} onClick={this.handleClick}>{pages}</td>)\n        return(\n            <Container>\n                <Row className=\"justify-content-center\">\n                    <Col sm=\"auto\">\n                    <Table bordered>\n                        <tbody>\n                        <tr>\n                            {tempPageNo}\n                        </tr>\n                        </tbody>\n                    </Table>\n                    </Col>\n                </Row>\n            </Container>\n        )\n    }\n}\n\nexport default Paginate;",["52","53"],"/home/akash/projects/Fyle/Client/fyleproject/src/globalInfo.js",[],"/home/akash/projects/Fyle/Client/fyleproject/src/component/bankdetail.js",["54"],"import React, { Component } from 'react';\nimport {Container, Row, Col, Form, Table} from 'react-bootstrap';\nimport {ServerDomain} from '../globalInfo'\nimport {MdFavorite} from 'react-icons/md';\nimport \"../bank.css\";\nimport {withRouter} from 'react-router-dom';\n\nclass BankDetail extends Component{\n    constructor(props)\n    {\n        super(props)\n        this.state={\n            loading:false,\n            data:null\n        }\n    }\n    componentDidMount()\n    {\n        this.setState({\n            loading:true\n        })\n        const url = `${ServerDomain}/api/bank/${this.props.match.params.id}`\n        fetch(url)\n        .then(res=>res.json())\n        .then(data=>this.setState({\n            data:data,\n            loading:false\n        }))\n    }\n    render()\n    {\n        const data = this.state.data;\n        if(this.state.loading || !data)\n        {\n            return(\n                <Container>\n                    Loading...\n                </Container>\n            )\n        }\n        return(\n\n            <div>\n                <Row className=\"justify-content-end\">\n                    <Col sm=\"auto\">\n                        {data.favorite?\n                        <MdFavorite className=\"favourite scale\" ></MdFavorite>:\n                        <MdFavorite className=\"scale\"></MdFavorite>}\n                    </Col>\n                </Row>\n                <h3>{data.bank_id.name}</h3>\n                <Table responsive>\n                    <thead>\n                        <tr>\n                        <th>Branch</th>\n                        <th>City</th>\n                        <th>State</th>\n                        <th>IFSC</th>\n                        <th>Favourite</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr>\n                            <td>{data.branch}</td>\n                            <td>City: {data.city}</td>\n                            <td>State: {data.state}</td>\n                            <td>IFSC: {data.ifsc}</td>\n                        </tr>\n                    </tbody>\n                </Table>\n            </div>\n        )\n    }\n}\n\nexport default withRouter(BankDetail);",{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","severity":1,"message":"60","line":3,"column":36,"nodeType":"61","messageId":"62","endLine":3,"endColumn":41},{"ruleId":"59","severity":1,"message":"63","line":10,"column":3,"nodeType":"61","messageId":"62","endLine":10,"endColumn":7},{"ruleId":"64","severity":1,"message":"65","line":16,"column":3,"nodeType":"66","messageId":"67","endLine":19,"endColumn":4},{"ruleId":"64","severity":1,"message":"65","line":43,"column":3,"nodeType":"66","messageId":"67","endLine":46,"endColumn":4},{"ruleId":"68","severity":1,"message":"69","line":68,"column":23,"nodeType":"70","messageId":"71","endLine":68,"endColumn":25},{"ruleId":"55","replacedBy":"72"},{"ruleId":"57","replacedBy":"73"},{"ruleId":"59","severity":1,"message":"74","line":2,"column":29,"nodeType":"61","messageId":"62","endLine":2,"endColumn":33},{"ruleId":"64","severity":1,"message":"65","line":6,"column":5,"nodeType":"66","messageId":"67","endLine":9,"endColumn":6},{"ruleId":"55","replacedBy":"75"},{"ruleId":"57","replacedBy":"76"},{"ruleId":"59","severity":1,"message":"74","line":2,"column":30,"nodeType":"61","messageId":"62","endLine":2,"endColumn":34},"no-native-reassign",["77"],"no-negated-in-lhs",["78"],"no-unused-vars","'Table' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected",["77"],["78"],"'Form' is defined but never used.",["77"],["78"],"no-global-assign","no-unsafe-negation"]